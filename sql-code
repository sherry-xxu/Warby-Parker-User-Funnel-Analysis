-- Look at the first 10 rows of the table
 SELECT *
 FROM survey
 LIMIT 10;

-- calculate the number of responses for each question
SELECT question, COUNT(DISTINCT user_id)
FROM survey
GROUP BY 1
ORDER BY 1;


-- the percentage of users who answer each question
-- 1.0 * 475 / 500 = 0.95
-- 1.0 * 380 / 475 = 0.8
-- 1.0 * 361 / 380 = 0.95
-- 1.0 * 270 / 361 = 0.7479224
-- The third question and last question have lower completion rate
-- Reason might be users don't know what shape of glasses they like, or
-- they do not remember when their last eye exam was.

-- examine quiz, home_try_on, and purchase tables
SELECT *
FROM quiz
LIMIT 5;

SELECT *
FROM home_try_on
LIMIT 5;

SELECT *
FROM purchase
LIMIT 5;

-- LEFT JOIN three tables
SELECT
  DISTINCT q.user_id,
  h.user_id IS NOT NULL AS 'is_home_try_on',
  h.number_of_pairs,
  p.user_id IS NOT NULL AS 'is_purchase'
FROM quiz AS 'q'
LEFT JOIN home_try_on AS 'h'
  ON q.user_id = h.user_id
LEFT JOIN purchase AS 'p'
  ON h.user_id = p.user_id
LIMIT 10;

-- calculate the difference in purchase rates between customers who had
-- 3 number_of_pairs with the ones who had 5.
WITH funnel AS (
 SELECT
  DISTINCT q.user_id,
  h.user_id IS NOT NULL AS 'is_home_try_on',
  h.number_of_pairs,
  p.user_id IS NOT NULL AS 'is_purchase'
 FROM quiz AS 'q'
 LEFT JOIN home_try_on AS 'h'
  ON q.user_id = h.user_id
 LEFT JOIN purchase AS 'p'
  ON h.user_id = p.user_id
)
SELECT 
  number_of_pairs,
  SUM(is_purchase) AS purchases,
  ROUND(1.0 * SUM(is_purchase) / COUNT(user_id), 2) AS 'purchase_rate'
FROM funnel
GROUP BY 1;

-- overall conversion rates
-- and conversion from quiz to try on and try on to purchase
SELECT
  ROUND(1.0 * COUNT(q.user_id) / COUNT(q.user_id), 2) AS 'quiz, %',
  ROUND(1.0 * COUNT(h.user_id) / COUNT(q.user_id), 2) AS 'quiz to try, %',
  ROUND(1.0 * COUNT(p.user_id) / COUNT(h.user_id), 2) AS 'try to buy, %',
  ROUND(1.0 * COUNT(p.user_id) / COUNT(q.user_id), 2) AS 'quiz to buy, %'
FROM quiz AS 'q'
LEFT JOIN home_try_on AS 'h'
  ON q.user_id = h.user_id
LEFT JOIN purchase AS 'p'
  ON h.user_id = p.user_id;

-- most common results of the style from quiz
SELECT
 DISTINCT style, 
 COUNT(user_id) AS 'number of users'
FROM quiz
GROUP BY 1
ORDER BY 2 DESC;

-- women's quiz style detail
-- quiz fit
WITH women AS (
  SELECT 
    DISTINCT user_id,
    fit,
    shape,
    color
  FROM quiz
  WHERE style = "Women's Styles"
)
SELECT
  DISTINCT fit,
  COUNT(*) AS 'fit_result'
FROM women
GROUP BY 1
ORDER BY 2 DESC;

-- quiz shape
WITH women AS (
  SELECT 
    DISTINCT user_id,
    fit,
    shape,
    color
  FROM quiz
  WHERE style = "Women's Styles"
)
SELECT
  DISTINCT shape,
  COUNT(*) AS 'shape_result'
FROM women
GROUP BY 1
ORDER BY 2 DESC;

-- quiz color
WITH women AS (
  SELECT 
    DISTINCT user_id,
    fit,
    shape,
    color
  FROM quiz
  WHERE style = "Women's Styles"
)
SELECT DISTINCT color, COUNT(*) AS 'color_result'
FROM women
GROUP BY 1
ORDER BY 2 DESC;

-- Men's quiz style details
-- quiz fit
WITH men AS (
  SELECT 
    DISTINCT user_id,
    fit,
    shape,
    color
  FROM quiz
  WHERE style = "Men's Styles"
)
SELECT
  DISTINCT fit,
  COUNT(*) AS 'fit_result'
FROM men
GROUP BY 1
ORDER BY 2 DESC;

-- quiz shape
WITH men AS (
  SELECT 
    DISTINCT user_id,
    fit,
    shape,
    color
  FROM quiz
  WHERE style = "Men's Styles"
)
SELECT
  DISTINCT shape,
  COUNT(*) AS 'shape_result'
FROM men
GROUP BY 1
ORDER BY 2 DESC;

-- quiz color
WITH men AS (
  SELECT 
    DISTINCT user_id,
    fit,
    shape,
    color
  FROM quiz
  WHERE style = "Men's Styles"
)
SELECT
  DISTINCT color,
  COUNT(*) AS 'color_result'
FROM men
GROUP BY 1
ORDER BY 2 DESC;

-- purchase details
-- which product is most popular
SELECT
  product_id,
  COUNT(*),
  style,
  model_name,
  color,
  price
FROM purchase
GROUP BY 1, 3
ORDER BY 2 DESC;

-- which style has higher purchase rate
SELECT
  style,
  COUNT(*) AS 'number_of_purchase',
  ROUND(1.0 * COUNT(*) / 495, 2) AS 'percentage'
FROM purchase
GROUP BY 1
ORDER BY 2 DESC;

-- purchase by pricing and style
SELECT
  style,
  price,
  COUNT(*)
FROM purchase
GROUP BY 1, 2
ORDER BY 1, 2;
